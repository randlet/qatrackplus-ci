sudo: required
dist: bionic

language: python

#cache: pip

services:
    - mysql
    - postgresql

addons:
  firefox: latest
  postgresql: "12.5"

python:
  - "3.6"
  - "3.7"
  - "3.8"
  - "3.9"

env:
  - DJANGO=2.2 DB=sqlite
  - DJANGO=2.2 DB=postgres
  - DJANGO=2.2 DB=mysql

services:
    - xvfb
    - postgresql

before_script:
  - if [[ $DB == mysql ]]; then mysql -u root < deploy/mysql/create_db_and_role.sql; fi
  - if [[ $DB == mysql ]]; then mysql -u root -e "GRANT ALL PRIVILEGES ON * . * TO 'qatrack'@'localhost';"; fi
  - if [[ $DB == mysql ]]; then mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql; fi
  - if [[ $DB == postgres ]]; then psql -U postgres < deploy/postgres/create_db_and_role.sql; fi
  - if [[ $DB == postgres ]]; then psql -U postgres -c "ALTER USER qatrack CREATEDB"; fi
  - "export DISPLAY=:99.0"
  - sleep 3 # give xvfb some time to start

before_install:
  - sudo apt-get update
  - sudo apt-get install make build-essential python3-dev python3-tk
  - if [[ $DB == mysql ]]; then sudo apt-get install libmysqlclient-dev; fi
    #- if [[ $DB == postgres ]]; then sudo apt-get install postgresql libpq-dev postgresql-client postgresql-client-common; fi
  - wget https://github.com/mozilla/geckodriver/releases/download/v0.22.0/geckodriver-v0.22.0-linux64.tar.gz
  - mkdir geckodriver
  - tar -xzf geckodriver-v0.22.0-linux64.tar.gz -C geckodriver
  - export PATH=$PATH:$PWD/geckodriver

install:
  - pip install --upgrade pip
  - pip install flaky
  - if [[ $DB == mysql ]]; then pip install -r requirements/mysql.txt; fi
  - if [[ $DB == mysql ]]; then cp deploy/mysql/local_settings.py qatrack/local_settings.py; fi
  - if [[ $DB == postgres ]]; then pip install -r requirements/postgres.txt; fi
  - if [[ $DB == postgres ]]; then cp deploy/postgres/local_settings.py qatrack/local_settings.py; fi
  - if [[ $DB == sqlite ]]; then pip install -r requirements/base.txt; fi
  - if [[ $DB == sqlite ]]; then cp deploy/sqlite/local_settings.py qatrack/local_settings.py; fi

script:
  - cat qatrack/local_settings.py
  - if [[ $DB == sqlite ]]; then yes | pytest -x -m "not selenium"; fi
    #- if [[ $DB == sqlite ]]; then yes | pytest --force-flaky --max-runs=3 --min-passes=1 -m "selenium"; fi
  - if [[ $DB == postgres ]]; then yes | pytest -x -m "not selenium"; fi
  - if [[ $DB == mysql ]]; then yes | pytest -x -m "not selenium"; fi

